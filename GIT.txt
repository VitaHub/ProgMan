'git init': 
	creates a new Git repository
'git status': 
	inspects the contents of the working directory and staging area
'git add filename': 
	adds files from the working directory to the staging area
	'git add .': add all files
'git diff filename': 
	shows the difference between the working directory and the staging area
'git commit -m "Completed some files"': 
	permanently stores file changes from the staging area in the repository
'git log': 
	shows a list of all previous commits
'git checkout HEAD filename': 
	Discards changes in the working directory.
	alternative: 'git checkout -- filename'
'git reset HEAD filename': 
	Unstages file changes in the staging area.
	Убирает файл из последнего HEAD
'git reset SHA': 
	Can be used to reset to a previous commit in your commit history.
	 This command works by using the first 7 characters of the SHA of a previous commit. For example, if the SHA 	of the previous commit is 	5d692065cf51a2f50ea8e7b19b5a7ae512f633ba, use:
	git reset 5d69206
'git branch': 
	Lists all a Git project's branches.
'git branch branch_name': 
	Creates a new branch.
'git checkout branch_name': 
	Used to switch from one branch to another.
'git merge branch_name': 
	Used to join file changes from one branch to another.
'git branch -d branch_name': 
	Deletes the branch specified.
'git clone': 
	Creates a local copy of a remote.
	'git clone remote_location clone_name'
'git remote -v': 
	Lists a Git project's remotes.
'git fetch': 
	Fetches work from the remote into the local copy.
'git merge origin/master': 
	Merges origin/master into your local branch.
'git pull': 
	'git fetch' + 'git merge origin/master'
'git push origin <branch_name>': 
	Pushes a local branch to the origin remote.
	'git push origin your_branch_name'